on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@master
    
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create ACR
      id: create-acr
      run: |
        az acr create -n l5sceanriotesting34erw -g l5sceanriotesting34erw908b-rg --location "West Central US" --sku Standard --admin-enabled
        echo "::set-output name=acr_username::`az acr credential show -n l5sceanriotesting34erw --query username | xargs`"
        echo "::set-output name=acr_password::`az acr credential show -n l5sceanriotesting34erw --query passwords[0].value | xargs`"
        echo "::add-mask::`az acr credential show -n l5sceanriotesting34erw --query passwords[0].value | xargs`"

    - uses: azure/docker-login@v1
      with:
        login-server: l5sceanriotesting34erw.azurecr.io
        username: ${{ steps.create-acr.outputs.acr_username }}
        password: ${{ steps.create-acr.outputs.acr_password }}

    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/" -f  "Dockerfile" -t l5sceanriotesting34erw.azurecr.io/akskodey:${{ github.sha }}
        docker push l5sceanriotesting34erw.azurecr.io/akskodey:${{ github.sha }}
    
    - uses: azure/k8s-set-context@v1
      id: login
      with:
         kubeconfig: ${{ secrets.aks_akskodey_kubeConfig }}
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep akskodeyb0d4 | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace akskodeyb0d4`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: akskodeyb0d4
        container-registry-url: l5sceanriotesting34erw.azurecr.io
        container-registry-username: ${{ steps.create-acr.outputs.acr_username }}
        container-registry-password: ${{ steps.create-acr.outputs.acr_password }}
        secret-name: akskodeydockerauth

    - uses: azure/k8s-bake@v1
      with:
        renderEngine: 'helm'
        helmChart: aks-helloworld
        releaseName: 'aks-helm-release'
        helm-version: 'latest' 
        silent: 'false'
        overrideFiles: |
          
        overrides: |
          replicas:2
          image.repository:l5sceanriotesting34erw.azurecr.io/akskodey
          image.tag:${{ github.sha }}
          imagePullSecrets:
            -name:akskodeydockerauth
      id: bake

    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: akskodeyb0d4
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
          l5sceanriotesting34erw.azurecr.io/akskodey:${{ github.sha }}
        imagepullsecrets: |
          akskodeydockerauth